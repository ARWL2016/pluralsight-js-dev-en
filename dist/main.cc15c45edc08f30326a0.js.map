{"version":3,"sources":["webpack:///main.cc15c45edc08f30326a0.js","webpack:///./src/index.js","webpack:///./src/api/userApi.js","webpack:///./src/api/baseUrl.js"],"names":["webpackJsonp","module","exports","__webpack_require__","global","_userApi","getUsers","then","result","usersBody","forEach","user","id","firstName","lastName","email","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","deleteUser","attributes","value","row","parentNode","removeChild","call","this","_interopRequireDefault","obj","__esModule","default","get","del","url","fetch","baseUrl","onSuccess","onError","request","Request","method","response","json","error","console","log","Object","defineProperty","_baseUrl","_baseUrl2","getBaseUrl","getQueryStringParameterByName","name","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent"],"mappings":"AAAAA,cAAc,IAER,SAASC,EAAQC,EAASC,IAEH,SAASC,GAAS,YCJ/CD,GAAA,EAEA,IAAAE,GAAAF,EAAA,IAGA,EAAAE,EAAAC,YAAWC,KAAK,SAAAC,GACZ,GAAIC,GAAY,EAEhBD,GAAOE,QAAQ,SAAAC,GACXF,6CAC2BE,EAAKC,GADhC,qDAEMD,EAAKC,GAFX,uBAGMD,EAAKE,UAHX,uBAIMF,EAAKG,SAJX,uBAKMH,EAAKI,MALX,0BAaJX,EAAOY,SAASC,eAAe,SAASC,UAAYT,CAElD,IAAMU,GAAcf,EAAOY,SAASI,uBAAuB,aAI/DC,OAAMC,KAAKH,EAAa,SAAAI,GACtBA,EAAKC,QAAU,SAASC,GACtB,GAAMC,GAAUD,EAAME,MACtBF,GAAMG,kBACN,EAAAvB,EAAAwB,YAAWH,EAAQI,WAAW,WAAWC,MACzC,IAAMC,GAAMN,EAAQO,WAAWA,UAC/BD,GAAIC,WAAWC,YAAYF,UDIHG,KAAKjC,EAAU,WAAa,MAAOkC,WAI3D,SAASnC,EAAQC,KAKhB,CAED,SAASD,EAAQC,EAASC,GAE/B,YAcA,SAASkC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GExDjF,QAAShC,KACZ,MAAOmC,GAAI,SAGR,QAASZ,GAAWjB,GACvB,MAAO8B,YAAa9B,GAIxB,QAAS6B,GAAIE,GACT,MAAOC,OAAMC,EAAUF,GAAKpC,KAAKuC,EAAWC,GAIhD,QAASL,GAAIC,GACT,GAAMK,GAAU,GAAIC,SAAQJ,EAAUF,GAClCO,OAAQ,UAGZ,OAAON,OAAMI,GAASzC,KAAKuC,EAAWC,GAG1C,QAASD,GAAUK,GACf,MAAOA,GAASC,OAIpB,QAASL,GAAQM,GACbC,QAAQC,IAAIF,GFgBfG,OAAOC,eAAevD,EAAS,cAC3B6B,OAAO,IAEX7B,EE/CeI,WFgDfJ,EE5Ce2B,aAVhB1B,EAAA,EACA,IAAAuD,GAAAvD,EAAA,GF2DKwD,EAAYtB,EAAuBqB,GEzDlCb,GAAU,EAAAc,iBFmGT,CAED,SAAS1D,EAAQC,GAEtB,YG3Gc,SAAS0D,KACpB,MAAOC,GAA8B,cAAgB,wBAA0B,IAGnF,QAASA,GAA8BC,EAAMnB,GACtCA,IAAKA,EAAMoB,OAAOC,SAASC,MAChCH,EAAOA,EAAKI,QAAQ,UAAW,OAC/B,IAAIC,GAAQ,GAAIC,QAAO,OAASN,EAAO,qBACnCO,EAAUF,EAAMG,KAAK3B,EACzB,OAAK0B,GACAA,EAAQ,GACNE,mBAAmBF,EAAQ,GAAGH,QAAQ,MAAO,MAD5B,GADH,KHoGtBV,OAAOC,eAAevD,EAAS,cAC3B6B,OAAO,IAEX7B,aGhHuB0D","file":"main.cc15c45edc08f30326a0.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t__webpack_require__(1);\n\t\n\tvar _userApi = __webpack_require__(3);\n\t\n\t//populate table from API call \n\t(0, _userApi.getUsers)().then(function (result) {\n\t    var usersBody = \"\";\n\t\n\t    result.forEach(function (user) {\n\t        usersBody += '<tr>\\n        <td><a href=\"#\" data-id=\"' + user.id + '\" class=\"deleteUser\">Delete</a></td>\\n        <td>' + user.id + '</td> \\n        <td>' + user.firstName + '</td> \\n        <td>' + user.lastName + '</td> \\n        <td>' + user.email + '</td> \\n        </tr>';\n\t    });\n\t    //nb. the html fragment is just a string \n\t    // string partials make this much better! \n\t    //in reality this process would usually be done with a framework\n\t\n\t    //why do we use global here \n\t    global.document.getElementById('users').innerHTML = usersBody;\n\t\n\t    var deleteLinks = global.document.getElementsByClassName('deleteUser');\n\t\n\t    // Must use array.from to create a real array from a DOM collection\n\t    // getElementsByClassname only returns an \"array like\" object\n\t    Array.from(deleteLinks, function (link) {\n\t        link.onclick = function (event) {\n\t            var element = event.target;\n\t            event.preventDefault();\n\t            (0, _userApi.deleteUser)(element.attributes[\"data-id\"].value);\n\t            var row = element.parentNode.parentNode;\n\t            row.parentNode.removeChild(row);\n\t        };\n\t    });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.getUsers = getUsers;\n\texports.deleteUser = deleteUser;\n\t\n\t__webpack_require__(4);\n\t\n\tvar _baseUrl = __webpack_require__(5);\n\t\n\tvar _baseUrl2 = _interopRequireDefault(_baseUrl);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t//polyfill for browsers with no fetch support  \n\t//this is a bit like the repository pattern (used to abstract away db access in a course-grained API)\n\t//this is a centralised place to handle all API calls \n\tvar baseUrl = (0, _baseUrl2.default)();\n\t\n\t//public function for export \n\tfunction getUsers() {\n\t    return get('users');\n\t}\n\t\n\tfunction deleteUser(id) {\n\t    return del('users/' + id);\n\t}\n\t\n\t//the actual fetch function only needs the url and returns a promise  \n\tfunction get(url) {\n\t    return fetch(baseUrl + url).then(onSuccess, onError);\n\t}\n\t\n\t//privatised and centralised delete function  \n\tfunction del(url) {\n\t    var request = new Request(baseUrl + url, {\n\t        method: 'DELETE'\n\t    });\n\t\n\t    return fetch(request).then(onSuccess, onError);\n\t}\n\t\n\tfunction onSuccess(response) {\n\t    return response.json();\n\t}\n\t\n\t//centralised error handling  \n\tfunction onError(error) {\n\t    console.log(error); //eslint-disable-line no-console\n\t}\n\n/***/ },\n/* 4 */,\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = getBaseUrl;\n\t//if the app is in development we will use our mock api data, otherwise we will return the root, which is where our express server static data is served (pretending to be the real database) - so we have real mock data + mock real data!! \n\t\n\tfunction getBaseUrl() {\n\t    return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001' : '/';\n\t}\n\t\n\tfunction getQueryStringParameterByName(name, url) {\n\t    if (!url) url = window.location.href;\n\t    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t        results = regex.exec(url);\n\t    if (!results) return null;\n\t    if (!results[2]) return '';\n\t    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t}\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** main.cc15c45edc08f30326a0.js\n **/","import './index.css'; \r\n\r\nimport {getUsers, deleteUser} from './api/userApi'; \r\n\r\n//populate table from API call \r\ngetUsers().then(result => {\r\n    let usersBody = \"\"; \r\n\r\n    result.forEach(user => {\r\n        usersBody+= `<tr>\r\n        <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\r\n        <td>${user.id}</td> \r\n        <td>${user.firstName}</td> \r\n        <td>${user.lastName}</td> \r\n        <td>${user.email}</td> \r\n        </tr>`\r\n    });\r\n    //nb. the html fragment is just a string \r\n    // string partials make this much better! \r\n    //in reality this process would usually be done with a framework\r\n\r\n    //why do we use global here \r\n    global.document.getElementById('users').innerHTML = usersBody;\r\n\r\n      const deleteLinks = global.document.getElementsByClassName('deleteUser');\r\n\r\n      // Must use array.from to create a real array from a DOM collection\r\n  // getElementsByClassname only returns an \"array like\" object\r\n  Array.from(deleteLinks, link => {\r\n    link.onclick = function(event) {\r\n      const element = event.target;\r\n      event.preventDefault();\r\n      deleteUser(element.attributes[\"data-id\"].value);\r\n      const row = element.parentNode.parentNode;\r\n      row.parentNode.removeChild(row);\r\n    };\r\n  });\r\n});\r\n\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","//polyfill for browsers with no fetch support  \r\n//this is a bit like the repository pattern (used to abstract away db access in a course-grained API)\r\n//this is a centralised place to handle all API calls \r\nimport 'whatwg-fetch'; \r\nimport getBaseUrl from './baseUrl'; \r\n\r\nconst baseUrl = getBaseUrl(); \r\n\r\n//public function for export \r\nexport function getUsers() {\r\n    return get('users'); \r\n}\r\n\r\nexport function deleteUser(id) {\r\n    return del(`users/${id}`); \r\n}\r\n\r\n//the actual fetch function only needs the url and returns a promise  \r\nfunction get(url) {\r\n    return fetch(baseUrl + url).then(onSuccess, onError);\r\n}\r\n\r\n//privatised and centralised delete function  \r\nfunction del(url) {\r\n    const request = new Request(baseUrl + url, {\r\n        method: 'DELETE'\r\n    });\r\n\r\n    return fetch(request).then(onSuccess, onError); \r\n}\r\n\r\nfunction onSuccess(response) {\r\n    return response.json(); \r\n}\r\n\r\n//centralised error handling  \r\nfunction onError(error) {\r\n    console.log(error); //eslint-disable-line no-console\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/userApi.js\n **/","//if the app is in development we will use our mock api data, otherwise we will return the root, which is where our express server static data is served (pretending to be the real database) - so we have real mock data + mock real data!! \r\n\r\nexport default function getBaseUrl() {\r\n    return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001' : '/'; \r\n}\r\n\r\nfunction getQueryStringParameterByName(name, url) {\r\n  if (!url) url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n      results = regex.exec(url);\r\n  if (!results) return null;\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/baseUrl.js\n **/"],"sourceRoot":""}